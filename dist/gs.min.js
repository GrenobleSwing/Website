function DefaultRouteConfig(e){e.otherwise({redirectTo:"/login"})}function run(e,t,r,s){e.globals=r.get("globals")||{},e.globals.currentUser&&(s.defaults.headers.common.Authorization="Basic "+e.globals.currentUser.authdata),e.$on("$locationChangeStart",function(r,s,i){var n=["/login","/sign-up"].indexOf(t.path())===-1,o=!!e.globals.currentUser&&(!!e.globals.currentUser.login&&!!e.globals.currentUser.authdata);n&&!o&&t.path("/login")})}function SignUpRouteConfig(e){e.when("/sign-up",{controller:"signUpController",templateUrl:"partials/signup.html",controllerAs:"ctrl"})}function SignUpController(e,t){this.location=e,this.userService=t,this.login="",this.password="",this.passwordConfirmation="",this.init_()}function SubscriptionService(e){this.subscriptionResource=e,this.init_()}function FakeSubscriptionResource(e,t,r,s){this.timeout=e,this.filter=t,this.q=r,this.resource=s,this.subscriptionResource=this.resource("resources/sample/subscriptions.json",{},{query:{method:"GET",isArray:!0}}),this.errorsResource=this.resource("resources/sample/validationErrors.json",{},{query:{method:"GET",isArray:!0}}),this.init_()}function SubscriptionsViewController(e){this.subscriptionService=e,this.user={id:2},this.list=[],this.init_()}function SubscriptionResource(e){this.resource=e("/api/subscription/:subscriptionId",{subscriptionId:"@id"},{get:{method:"GET"},validate:{method:"GET"},create:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},delete:{method:"DELETE"}}),this.init_()}function SubscriptionsViewDirective(){return{restrict:"AE",templateUrl:"partials/subscriptions.view.html",controller:"subscriptionsViewController",controllerAs:"ctrl"}}function Base64(){this.keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}function FakeAuthenticationService(e,t,r,s,i){this.http=e,this.cookieStore=t,this.currentUserService=i,this.encoder=s,this.rootScope=r,this.init_()}function AuthenticationService(e,t,r,s,i){this.http=e,this.rootScope=r,this.cookieStore=t,this.encoder=s,this.currentUserService=i,this.init_()}function PasswordEditController(e){this.password="",this.passwordConfirm="",this.user={},this.passwordService=e}function PasswordEditDirective(){return{restrict:"A",templateUrl:"partials/password.edit.html",controller:"passwordEditController",controllerAs:"ctrl",scope:{user:"=gsPasswordEdit"}}}function PasswordService(e){this.passwordResource=e,this.init_()}function PasswordResource(e){this.http=e,this.init_()}function LoginController(e,t){this.location=e,this.login="",this.password="",this.isLoading=!1,this.authenticationService=t,this.init_()}function LoginRouteConfig(e){e.when("/login",{controller:"loginController",templateUrl:"partials/login.html",controllerAs:"ctrl"})}function TopicResource(e){this.resource=e("/api/topic/:topicId",{topicId:"@id"},{get:{method:"GET"},create:{method:"POST"},update:{method:"PUT"},query:{method:"GET",isArray:!0},delete:{method:"DELETE"}}),this.init_()}function FakeTopicResource(e,t,r,s){this.timeout=e,this.filter=t,this.q=r,this.topics=JSON.stringify([]),this.resource=s("resources/sample/topics.json",{}),this.init_()}function FakeUsersResource(e,t,r,s){this.timeout=e,this.filter=t,this.q=r,this.users=JSON.stringify([]),this.resource=s("resources/sample/users.json",{}),this.init_()}function UserService(e){this.usersResource=e,this.init_()}function UsersService(e){this.usersResource=e,this.init_()}function UsersResource(e){this.http=e,this.init_()}function CurrentUserService(e){this.userResource=e,this.user={$ok:!1},this.init_()}function HomeRouteConfig(e){e.when("/home",{controller:"homeController",templateUrl:"partials/home.html",controllerAs:"ctrl"})}function HomeController(e){this.currentUserService=e,this.user={$ok:!1},this.init_()}function LogoutController(e,t){this.location=e,this.authenticationService=t}function CompareToDirective(){return{require:"ngModel",scope:{otherModelValue:"=gsCompareTo"},link:function(e,t,r,s){s.$validators.compareTo=function(t){return t==e.otherModelValue},e.$watch("compareTo",function(){s.$validate()})}}}function BalanceViewController(e){this.currentUserService=e,this.init_()}function BalanceViewDirective(){return{restrict:"AE",templateUrl:"app/js/components/balance/balance.view.html",controller:"BalanceViewController",controllerAs:"ctrl"}}function AccountResource(e){this.http=e,this.init_()}function AccountService(e,t){this.accountResource=e,this.passwordResource=t,this.init_()}function FakeAccountResource(e,t,r,s){this.timeout=e,this.filter=t,this.q=r,this.accounts=JSON.stringify([]),this.resource=s("resources/sample/accounts.json",{}),this.init_()}function AccountViewDirective(){return{restrict:"A",templateUrl:"partials/account.view.html",controller:"accountViewController",controllerAs:"ctrl",scope:{user:"=gsAccountView"}}}function AccountViewController(e,t){this.accountService=t,this.account={$ok:!1},this.user=e.user,this.init_()}function TranslateConfiguration(e){e.translations("fr",{LOGIN:{TITLE:"Déja membre ?",SIGNUP:"Nouveau membre ?",MESSAGE:"La création d'un compte est gratuite et sans aucune obligation de votre part. Avoir un compte chez nous vous donne accès à votre espace personnel pour suivre votre information en temps réel."},SIGNUP:{TITLE:"Créer un compte"},ACCOUNT:{TITLE:"Etat civil",ADDRESS:"Adresse",FIRSTNAME:"Prénom",FIRSTNAME_REQUIRED:"le prénom est requis",LASTNAME:"Nom",LASTNAME_REQUIRED:"le nom est requis",EMAIL:"Courriel",EMAIL_REQUIRED:"Le courriel est requis",PASSWORD:"Mot de passe",PASSWORD_REQUIRED:"Le mot de passe est requis",PASSWORD_CONFIRM:"Confirmation du mot de passe",PASSWORD_CONFIRM_REQUIRED:"Le mot de passe est erroné",CITY:"Ville",COUNTRY:"Pays",ZIPCODE:"Code postal",PRIMARY_ROLE:"Rôle principal",LEADER:"Leader",FOLLOWER:"Follower",GENDER:"Genre",MALE:"Homme",FEMALE:"Femme"},SUBSCRIPTIONS:{TITLE:"Inscriptions"},BALANCE:{TITLE:"Solde"},PASSWORD:{TITLE:"Mot de passe"},TOPICS:{TITLE:"Thèmes"},ACTION:{SAVE:"Enregistrer",CONNECT:"Ouvrir une session",SIGNUP:"Continuer",CHANGE:"Modifier",CANCEL:"Annuler"}}),e.useSanitizeValueStrategy(null),e.preferredLanguage("fr")}function DefaultRouteConfig(e){e.otherwise({redirectTo:"/login"})}function run(e,t,r,s){e.globals=r.get("globals")||{},e.globals.currentUser&&(s.defaults.headers.common.Authorization="Basic "+e.globals.currentUser.authdata),e.$on("$locationChangeStart",function(r,s,i){var n=["/login","/sign-up"].indexOf(t.path())===-1,o=!!e.globals.currentUser&&(!!e.globals.currentUser.login&&!!e.globals.currentUser.authdata);n&&!o&&t.path("/login")})}angular.module("sdt.models",[]).factory("ObserverService",[function(){var e={};return e.observers={},e.attach=function(t,r,s){s&&(e.observers[r]||(e.observers[r]={}),e.observers[r][s]||(e.observers[r][s]=[]),e.observers[r][s].push(t))},e.detachById=function(t){for(var r in e.observers)e.detachByEventAndId(r,t)},e.detachByEvent=function(t){t in e.observers&&delete e.observers[t]},e.detachByEventAndId=function(t,r){t in e.observers&&r in e.observers[t]&&delete e.observers[t][r]},e.notify=function(t,r){for(var s in e.observers[t])angular.forEach(e.observers[t][s],function(e){e(r)})},e}]),angular.module("app",["ngRoute","ngCookies","ui.bootstrap","ngResource","app.auth","app.common","app.home","app.login","app.logout","app.account","app.subscriptions","app.balance","app.signup","app.password","app.users","sdt.models","pascalprecht.translate"]).config(["$routeProvider",DefaultRouteConfig]).config(["$translateProvider",TranslateConfiguration]).run(["$rootScope","$location","$cookieStore","$http",run]),SignUpController.prototype={init_:function(){this.handleResponse_=this.handleResponse_.bind(this)},signUp:function(){this.userService.create({login:this.login,password:this.password}).then(this.handleResponse_)},handleResponse_:function(e){e.success&&this.location.path("/login")}},SubscriptionService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getByUser:function(e){return this.subscriptionResource.getAll({userId:e.id}).then(this.handleSuccess_,this.handleError_("Error retrieving subscriptions by User"))},addSubscription:function(e,t){return this.subscriptionResource.create({userId:e.id,topicId:t.id}).then(this.handleSuccess_,this.handleError_("Error adding subscription"))},cancelSubscription:function(e){return this.subscriptionResource.remove(e.id).then(this.handleSuccess_,this.handleError_("Error cancelling subscription"))},validateSubscription:function(e){return this.subscriptionResource.validate(e).then(this.handleSuccess_,this.handleError_("Error validating subscription"))},handleSuccess_:function(e){return e.$ok=!0,e},handleError_:function(e){return function(){return{$ok:!1,message:e}}}},FakeSubscriptionResource.prototype={init_:function(){},getById:function(e){var t=this.q.defer(),r=this.filter("filter")(this.subscriptions,{id:e}),s=r.length?r[0]:null;return t.resolve(s),t.promise},getAll:function(e){return this.subscriptionResource.query().$promise.then(function(t){var r=this.q.defer(),s=this.filter("filter")(t,e);return r.resolve(s),r.promise}.bind(this))},validate:function(e){var t=this.q.defer();return t.resolve(this.errors),t.promise},create:function(e){var t=this.q.defer(),r=this.filter("filter")(this.subscriptions,{id:e.id});if(r.length>0)t.resolve({success:!1,message:'Subscription "'+e.name+'" is already taken'});else{var s=subscriptions[this.subscription.length-1]||{id:0};infos.id=s.id+1,this.subscriptions.push(e),t.resolve({success:!0})}return t.promise},update:function(e){for(var t=this.q.defer(),r=0;r<this.subscriptions.length;r++)if(this.subscriptions[r].id===e.id){this.subscriptions[r]=e;break}return t.resolve(),t.promise},remove:function(e){for(var t=$q.defer(),r=0;r<this.subscriptions.length;r++){var s=this.subscriptions[r];if(s.id===e){this.subscription.splice(r,1);break}}return t.resolve(),t.promise}},SubscriptionsViewController.prototype={init_:function(){this.list=this.listSubscriptions()},validateSubscription:function(e){return this.subscriptionService.validateSubscription(e)},addSubscription:function(e){this.subscriptionService.addSubscription(this.user,e)},removeSubscription:function(e){this.subscriptionService.removeSubscription(e)},listSubscriptions:function(){return this.list=this.subscriptionService.getByUser(this.user).then(function(e){this.list=e}.bind(this)),this.list}},SubscriptionResource.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.resource.get(e).then(this.handleSuccess_,this.handleError_("Error getting subscription by id"))},getAll:function(e){return this.resource.query(e).then(this.handleSuccess_,this.handleError_("Error getting all subscriptions"))},create:function(e){return this.resource.create(e).then(this.handleSuccess_,this.handleError_("Error creating subscription"))},update:function(e){return this.resource.update(e).then(this.handleSuccess_,this.handleError_("Error updating subscription"))},remove:function(e){return this.resource.delete(e).then(this.handleSuccess_,this.handleError_("Error deleting subscription"))},validate:function(e){return this.resource.validate(e).then(this.handleSuccess_,this.handleError_("Error validating subscription"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},Base64.prototype={encode:function(e){var t,r,s,i,n,o="",c="",u="",h=0;do t=e.charCodeAt(h++),r=e.charCodeAt(h++),c=e.charCodeAt(h++),s=t>>2,i=(3&t)<<4|r>>4,n=(15&r)<<2|c>>6,u=63&c,isNaN(r)?n=u=64:isNaN(c)&&(u=64),o=o+this.keyStr.charAt(s)+this.keyStr.charAt(i)+this.keyStr.charAt(n)+this.keyStr.charAt(u),t=r=c="",s=i=n=u="";while(h<e.length);return o},decode:function(e){var t,r,s,i,n,o="",c="",u="",h=0,a=/[^A-Za-z0-9\+\/\=]/g;a.exec(e)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");do s=this.keyStr.indexOf(e.charAt(h++)),i=this.keyStr.indexOf(e.charAt(h++)),n=this.keyStr.indexOf(e.charAt(h++)),u=this.keyStr.indexOf(e.charAt(h++)),t=s<<2|i>>4,r=(15&i)<<4|n>>2,c=(3&n)<<6|u,o+=String.fromCharCode(t),64!=n&&(o+=String.fromCharCode(r)),64!=u&&(o+=String.fromCharCode(c)),t=r=c="",s=i=n=u="";while(h<e.length);return o}},FakeAuthenticationService.prototype={init_:function(){this.handleResponse_=this.handleResponse_.bind(this)},login:function(e,t){return this.currentUserService.getByLogin(e).then(this.handleResponse_)},setCredentials:function(e,t){var r=this.encoder.encode(e+":"+t);this.rootScope.globals={currentUser:{login:e,authdata:r}},this.http.defaults.headers.common.Authorization="Basic "+r,this.cookieStore.put("globals",this.rootScope.globals)},clearCredentials:function(){this.rootScope.globals={},this.cookieStore.remove("globals"),this.http.defaults.headers.common.Authorization="Basic"},handleResponse_:function(e){return e.$ok&&this.setCredentials(e.login,e.password),e}},AuthenticationService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this)},login:function(e,t,r){this.http.post("/api/authenticate",{username:e,password:t}).success(function(r){return r.success=!0,this.setCredentials(e,t),this.currentUserService.getByLogin(e),r}).error(function(e){return e.success=!1,e}).then(r)},setCredentials:function(e,t){var r=this.encoder.encode(e+":"+t);this.rootScope.globals={currentUser:{login:e,authdata:r}},this.http.defaults.headers.common.Authorization="Basic "+r,this.cookieStore.put("globals",this.rootScope.globals)},clearCredentials:function(){this.rootScope.globals={},this.cookieStore.remove("globals"),this.http.defaults.headers.common.Authorization="Basic"}},PasswordEditController.prototype={save:function(){return this.passwordService.updatePassword(this.user,password,passwordConfirm)}},PasswordService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},updatePassword:function(e,t,r){return this.passwordResource.change(e,t).then(this.handleSuccess_,this.handleError_("Error updating password"))},handleSuccess_:function(e){return e.$ok=!0,e},handleError_:function(e){return function(){return{$ok:!1,message:e}}}},PasswordResource.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},change:function(e,t){return this.http.put("/api/account/change-password/"+e.id,t).then(this.handleSuccess_,this.handleError_("Error changing password"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},LoginController.prototype={init_:function(){this.onResponse_=this.onResponse_.bind(this),this.authenticationService.clearCredentials()},connect:function(){this.isLoading=!1,this.authenticationService.login(this.login,this.password).then(this.onResponse_)},onResponse_:function(e){this.isLoading=!1,e.$ok&&this.location.path("/home")}},TopicResource.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.resource.get(e).then(this.handleSuccess_,this.handleError_("Error getting topic by id"))},getByUserId:function(e){return this.resource.query({userId:e}).then(this.handleSuccess_,this.handleError_("Error getting all topics"))},create:function(e){return this.resource.create(e).then(this.handleSuccess_,this.handleError_("Error creating topic"))},update:function(e){return this.resource.update(e).then(this.handleSuccess_,this.handleError_("Error updating topic"))},remove:function(e){return this.resource.delete(e).then(this.handleSuccess_,this.handleError_("Error deleting topic"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},FakeTopicResource.prototype={init_:function(){this.getTopics_=this.getTopics_.bind(this),this.resource.query(function(e){this.setTopics_(e)}.bind(this))},getById:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getTopics_(),{id:e}),s=r.length?r[0]:null;return t.resolve(s),t.promise},getByUserId:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getTopics_(),{userId:e}),s=r.length?r[0]:{};return t.resolve(s),t.promise},create:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getTopics_(),{id:e.id});if(r.length>0)t.resolve({success:!1,message:'Topic "'+e.name+'" is already taken'});else{var s=this.getTopics_(),i=s[e.length-1]||{id:0};infos.id=i.id+1,s.push(e),this.setTopics_(s),t.resolve({success:!0})}return t.promise},update:function(e){for(var t=this.q.defer(),r=this.getTopics_(),s=0;s<r.length;s++)if(r[s].id===e.id){r[s]=e;break}return this.setTopics_(r),t.resolve(),t.promise},remove:function(e){for(var t=$q.defer(),r=this.getTopics_(),s=0;s<r.length;s++){var i=r[s];if(i.id===e){r.splice(s,1);break}}return this.setTopics_(r),t.resolve(),t.promise},getTopics_:function(){return this.topics||(this.topics=JSON.stringify([])),JSON.parse(this.topics)},setTopics_:function(e){this.topics=JSON.stringify(e)}},FakeUsersResource.prototype={init_:function(){this.getUsers_=this.getUsers_.bind(this),this.resource.query(function(e){this.setUsers_(e)}.bind(this))},getAll:function(){var e=this.q.defer();return e.resolve(this.getUsers_()),e.promise},getById:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getUsers_(),{id:e}),s=r.length?r[0]:null;return t.resolve(s),t.promise},getByUsername:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getUsers_(),{login:e}),s=r.length?r[0]:null;return t.resolve(s),t.promise},create:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getUsers_(),{login:e.login});if(r.length>0)t.resolve({success:!1,message:'Username "'+e.login+'" is already taken'});else{var s=this.getUsers_(),i=s[s.length-1]||{id:0};e.id=i.id+1,s.push(e),this.setUsers_(s),t.resolve({success:!0})}return t.promise},update:function(e){for(var t=this.q.defer(),r=this.getUsers_(),s=0;s<r.length;s++)if(r[s].id===e.id){r[s]=e;break}return this.setUsers_(r),t.resolve(),t.promise},remove:function(e){for(var t=$q.defer(),r=this.getUsers_(),s=0;s<r.length;s++){var i=r[s];if(i.id===e){r.splice(s,1);break}}return this.setUsers_(r),t.resolve(),t.promise},getUsers_:function(){return this.users||(this.users=JSON.stringify([])),JSON.parse(this.users)},setUsers_:function(e){this.users=JSON.stringify(e)}},UserService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.usersResource.getById(e).then(this.handleSuccess_,this.handleError_("Error getting user by id"))},getByUsername:function(e){return this.usersResource.getByUsername(e).then(this.handleSuccess_,this.handleError_("Error getting user by username"))},create:function(e){return this.usersResource.create(e).then(this.handleSuccess_,this.handleError_("Error creating user"))},update:function(e){return this.usersResource.update(e).then(this.handleSuccess_,this.handleError_("Error updating user"))},remove:function(e){return this.usersResource.remove(e).then(this.handleSuccess_,this.handleError_("Error deleting user"))},handleSuccess_:function(e){return e},handleError_:function(e){return e}},UsersService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.usersResource.getById(e).then(this.handleSuccess_,this.handleError_("Error getting user by id"))},getAll:function(){return this.usersResource.getAll().then(this.handleSuccess_,this.handleError_("Error getting all users"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},UsersResource.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.http.get("/api/user/"+e).then(this.handleSuccess_,this.handleError_("Error getting user by id"))},getByUsername:function(e){return this.http.get("/api/user/"+e).then(this.handleSuccess_,this.handleError_("Error getting user by username"))},getAll:function(){return this.http.get("/api/users").then(this.handleSuccess_,this.handleError_("Error getting all users"))},create:function(e){return this.http.post("/api/user",e).then(handleSuccess_,this.handleError_("Error creating user"))},update:function(e){return this.http.put("/api/user/"+e.id,e).then(handleSuccess_,this.handleError_("Error updating user"))},remove:function(e){return this.http.delete("/api/user/"+e).then(handleSuccess_,this.handleError_("Error deleting user"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},CurrentUserService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getByLogin:function(e){return this.user=this.userResource.getByUsername(e).then(this.handleSuccess_,this.handleError_("Error getting user by username")),this.user},getCurrentUser:function(){return this.user},update:function(){return this.userResource.update(this.user).then(this.handleSuccess_,this.handleError_("Error updating user"))},handleSuccess_:function(e){return this.user=e,this.user.$ok=!0,this.user},handleError_:function(e){}},HomeController.prototype={init_:function(){this.user=this.currentUserService.getCurrentUser()}},LogoutController.prototype={logout:function(){this.authenticationService.clearCredentials(),this.location.path("/login")}},BalanceViewController.prototype={init_:function(){}},AccountResource.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getById:function(e){return this.http.get("/api/account/"+e).then(this.handleSuccess_,this.handleError_("Error getting account by id"))},getByUserId:function(e){return this.http.get("/api/account/user/"+e).then(this.handleSuccess_,this.handleError_("Error getting account by accountname"))},getAll:function(){return this.http.get("/api/account").then(this.handleSuccess_,this.handleError_("Error getting all accounts"))},create:function(e){return this.http.post("/api/account",e).then(this.handleSuccess_,this.handleError_("Error creating account"))},update:function(e){return this.http.put("/api/account/"+e.id,e).then(this.handleSuccess_,this.handleError_("Error updating account"))},remove:function(e){return this.http.delete("/api/account/"+e).then(this.handleSuccess_,this.handleError_("Error deleting account"))},handleSuccess_:function(e){return e.data},handleError_:function(e){return function(){return{success:!1,message:e}}}},AccountService.prototype={init_:function(){this.handleSuccess_=this.handleSuccess_.bind(this),this.handleError_=this.handleError_.bind(this)},getByUser:function(e){return this.accountResource.getByUserId(e.id).then(this.handleSuccess_,this.handleError_("Error getting account by accountname"))},updateAccount:function(e){return null===e.id?this.accountResource.create(e).then(this.handleSuccess_,this.handleError_("Error creating account")):this.accountResource.update(e).then(this.handleSuccess_,this.handleError_("Error updating account"))},handleSuccess_:function(e){return e.$ok=!0,e},handleError_:function(e){return function(){return{$ok:!1,message:e}}}},FakeAccountResource.prototype={init_:function(){this.getAccounts_=this.getAccounts_.bind(this),this.resource.query(function(e){this.setAccounts_(e)}.bind(this))},getById:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getAccounts_(),{id:e}),s=r.length?r[0]:null;return t.resolve(s),t.promise},getByUserId:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getAccounts_(),{userId:e}),s=r.length?r[0]:{};return t.resolve(s),t.promise},create:function(e){var t=this.q.defer(),r=this.filter("filter")(this.getAccounts_(),{id:e.id});if(r.length>0)t.resolve({success:!1,message:'Account "'+e.name+'" is already taken'});else{var s=this.getAccounts_(),i=s[e.length-1]||{id:0};infos.id=i.id+1,s.push(e),this.setAccounts_(s),t.resolve({success:!0})}return t.promise},update:function(e){for(var t=this.q.defer(),r=this.getAccounts_(),s=0;s<infos.length;s++)if(r[s].id===info.id){r[s]=e;break}return this.setAccounts_(r),t.resolve(),t.promise},remove:function(e){for(var t=$q.defer(),r=this.getAccounts_(),s=0;s<r.length;s++){var i=r[s];if(i.id===e){r.splice(s,1);break}}return this.setAccounts_(r),t.resolve(),t.promise},getAccounts_:function(){return this.accounts||(this.accounts=JSON.stringify([])),JSON.parse(this.accounts)},setAccounts_:function(e){this.accounts=JSON.stringify(e)}},AccountViewController.prototype={init_:function(){this.handleInitResponse_=this.handleInitResponse_.bind(this),this.account=this.accountService.getByUser(this.user).then(this.handleInitResponse_)},handleInitResponse_:function(e){return this.account=e,this.account.$ok=!0,this.account}},angular.module("app.signup",["app.users"]).config(["$routeProvider",SignUpRouteConfig]).controller("signUpController",["$location","userService",SignUpController]),angular.module("app.subscriptions",["app.users"]).directive("gsSubscriptionsView",SubscriptionsViewDirective).service("subscriptionResource",["$timeout","$filter","$q","$resource",FakeSubscriptionResource]).service("subscriptionService",["subscriptionResource",SubscriptionService]).controller("subscriptionsViewController",["subscriptionService",SubscriptionsViewController]),angular.module("app.auth",["app.users","sdt.models"]).service("encoder",Base64).service("authenticationService",["$http","$cookieStore","$rootScope","encoder","currentUserService",FakeAuthenticationService]),angular.module("app.password",[]).directive("gsPasswordEdit",PasswordEditDirective).service("passwordResource",["$http",PasswordResource]).service("passwordService",["passwordResource",PasswordService]).controller("passwordEditController",["passwordService",PasswordEditController]),angular.module("app.login",["app.auth"]).config(["$routeProvider",LoginRouteConfig]).controller("loginController",["$location","authenticationService",LoginController]),angular.module("app.users",["ngResource"]).service("usersResource",["$timeout","$filter","$q","$resource",FakeUsersResource]).service("currentUserService",["usersResource",CurrentUserService]).service("userService",["usersResource",UserService]).service("usersService",["usersResource",UsersService]),angular.module("app.home",[]).config(["$routeProvider",HomeRouteConfig]).controller("homeController",["currentUserService",HomeController]),angular.module("app.logout",["app.auth"]).controller("logoutController",["$location","authenticationService",LogoutController]),angular.module("app.common",[]).directive("gsCompareTo",CompareToDirective),angular.module("app.balance",["app.users"]).directive("gsBalanceView",BalanceViewDirective).controller("balanceViewController",["usersService",BalanceViewController]),angular.module("app.account",["app.users","ngResource"]).directive("gsAccountView",AccountViewDirective).service("accountResource",["$timeout","$filter","$q","$resource",FakeAccountResource]).service("accountService",["accountResource",AccountService]).controller("accountViewController",["$scope","accountService",AccountViewController]),angular.module("app",["ngRoute","ngCookies","ui.bootstrap","ngResource","app.auth","app.common","app.home","app.login","app.logout","app.account","app.subscriptions","app.balance","app.signup","app.password","app.users","sdt.models","pascalprecht.translate"]).config(["$routeProvider",DefaultRouteConfig]).config(["$translateProvider",TranslateConfiguration]).run(["$rootScope","$location","$cookieStore","$http",run]);